name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    

jobs:
  python-application:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    env:
      PYTHON-VERSION: ${{ matrix.python-version }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: python setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: cache python virtual environment
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Upgrade pip
        if: env.PYTHON-VERSION != '3.7'
        run: |
          pip install --upgrade pip
        env:
          PYTHON-VERSION: ${{ matrix.python-version }}

      - name: create python virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - name: check python linting
        run: |
          source venv/bin/activate
          black .

      - name: Run python application
        run: |
          source venv/bin/activate
          python script.py
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
